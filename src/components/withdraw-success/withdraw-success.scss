// include module
@import '../../../dependencies/sass/_flex.scss';
@import '../../../dependencies/sass/_unit.scss';
// current sass
.withdraw-success {
  width: 100vw;
  height: 100vh;
  .success-hint {
    @include vertical_direction();
    @include center();
    width: 100%;
    height: 450 / $unit * $symbol;
    .icon {
      width: 144 / $unit * $symbol;
      height: 144 / $unit * $symbol;
    }
    p:first-of-type {
      @include vertical_center();
      height: 114 / $unit * $symbol;
      font-size: 45 / $unit * $symbol;
    }
  }
  .success-step {
    @include vertical_center_horizontal_between();
    width: 100%;
    padding: {
      left: 90 / $unit * $symbol;
      right: 90 / $unit * $symbol;
    }
    .step-item {
      .item-badge {
        $param: (flex flex) (justifyContent flex-start);
        @include flexSet($param);
        width: 100%;
        .badge-svg {
          position: relative;
          width: 30 / $unit * $symbol;
          height: 30 / $unit * $symbol;
          .icon {
            position: absolute;
            left: 0 / $unit * $symbol;
            top: 0 / $unit * $symbol;
            z-index: 10;
            width: 30 / $unit * $symbol;
            height: 30 / $unit * $symbol;
          }
          &::after {
            position: absolute;
            left: 30 / $unit * $symbol;
            top: 15 / $unit * $symbol;
            z-index: 0;
            display: block;
            content: '';
            width: 246 / $unit * $symbol;
            height: 3 / $unit * $symbol;
            background-color: #4d7bfe;
          }
        }
      }
      .item-detail {
        width: 100%;
        p:first-of-type {
          @include vertical_center();
          height: 60 / $unit * $symbol;
        }
      }
    }
    .step-item:nth-child(2) {
      .item-badge {
        @include center();
        .badge-svg {
          &::after {
            background-color: #dddddd;
          }
        }
      }
    }
    .step-item:last-of-type {
      .item-badge {
        $param: (flex flex) (justifyContent flex-end);
        @include flexSet($param);
        .badge-svg {
          &::after {
            display: none;
          }
        }
      }
      p {
        $param: (flex flex) (justifyContent flex-end);
        @include flexSet($param);
      }
    }
  }
  .success-button {
    width: 100%;
    padding: {
      top: 99 / $unit * $symbol;
    }
  }
}